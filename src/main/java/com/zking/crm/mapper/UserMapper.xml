<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zking.crm.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.zking.crm.model.User" >
    <constructor >
      <idArg column="user_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="user_Name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="user_password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="user_role_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="user_flag" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <resultMap id="kfc" type="com.zking.crm.model.User" >
      <id column="user_id" property="userId" javaType="java.lang.Long" />
      <result column="user_Name" property="userName" javaType="java.lang.String" />
      <result column="user_password" property="userPassword" javaType="java.lang.String" />
      <result column="user_role_id" property="userRoleId" javaType="java.lang.Long" />
      <result column="user_flag" property="userFlag" javaType="java.lang.Integer" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, user_Name, user_password, user_role_id, user_flag
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
    <select id="doLogin" resultMap="kfc" parameterType="com.zking.crm.model.User">
      select * from t_user
      where user_name=#{userName,jdbcType=VARCHAR}
      and user_password=#{userPassword}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zking.crm.model.User" >
    insert into t_user (user_id, user_Name, user_password, 
      user_role_id, user_flag)
    values (#{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{userRoleId,jdbcType=BIGINT}, #{userFlag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zking.crm.model.User" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_Name,
      </if>
      <if test="userPassword != null" >
        user_password,
      </if>
      <if test="userRoleId != null" >
        user_role_id,
      </if>
      <if test="userFlag != null" >
        user_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userRoleId != null" >
        #{userRoleId,jdbcType=BIGINT},
      </if>
      <if test="userFlag != null" >
        #{userFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zking.crm.model.User" >
    update t_user
    <set >
      <if test="userName != null" >
        user_Name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userRoleId != null" >
        user_role_id = #{userRoleId,jdbcType=BIGINT},
      </if>
      <if test="userFlag != null" >
        user_flag = #{userFlag,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zking.crm.model.User" >
    update t_user
    set user_Name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_role_id = #{userRoleId,jdbcType=BIGINT},
      user_flag = #{userFlag,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>